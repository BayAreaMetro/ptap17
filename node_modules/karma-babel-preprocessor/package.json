{
  "_args": [
    [
      {
        "raw": "karma-babel-preprocessor@^6.0.1",
        "scope": null,
        "escapedName": "karma-babel-preprocessor",
        "name": "karma-babel-preprocessor",
        "rawSpec": "^6.0.1",
        "spec": ">=6.0.1 <7.0.0",
        "type": "range"
      },
      "/Users/MZ-MTC/mtc/ptap/ptap17"
    ]
  ],
  "_from": "karma-babel-preprocessor@>=6.0.1 <7.0.0",
  "_id": "karma-babel-preprocessor@6.0.1",
  "_inCache": true,
  "_location": "/karma-babel-preprocessor",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "shuhei",
    "email": "shuhei.kagawa@gmail.com"
  },
  "_npmVersion": "3.3.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "karma-babel-preprocessor@^6.0.1",
    "scope": null,
    "escapedName": "karma-babel-preprocessor",
    "name": "karma-babel-preprocessor",
    "rawSpec": "^6.0.1",
    "spec": ">=6.0.1 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/karma-babel-preprocessor/-/karma-babel-preprocessor-6.0.1.tgz",
  "_shasum": "7ae1d3e64950dbe11f421b74040ab08fb5a66c21",
  "_shrinkwrap": null,
  "_spec": "karma-babel-preprocessor@^6.0.1",
  "_where": "/Users/MZ-MTC/mtc/ptap/ptap17",
  "author": {
    "name": "Shuhei Kagawa",
    "email": "shuhei.kagawa@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/babel/karma-babel-preprocessor/issues"
  },
  "dependencies": {
    "babel-core": "^6.0.0"
  },
  "description": "Preprocessor to compile ES6 on the fly with babel.",
  "devDependencies": {
    "babel-polyfill": "^6.0.2",
    "babel-preset-es2015": "^6.0.12",
    "jasmine-core": "^2.3.4",
    "karma": "^0.13.14",
    "karma-jasmine": "^0.3.6",
    "karma-phantomjs-launcher": "^0.2.1",
    "phantomjs": "^1.9.18"
  },
  "directories": {},
  "dist": {
    "shasum": "7ae1d3e64950dbe11f421b74040ab08fb5a66c21",
    "tarball": "https://registry.npmjs.org/karma-babel-preprocessor/-/karma-babel-preprocessor-6.0.1.tgz"
  },
  "gitHead": "8b83ee12d596e3b57321931b3ca79b567f8e717c",
  "homepage": "https://github.com/babel/karma-babel-preprocessor",
  "keywords": [
    "karma-plugin",
    "karma-preprocessor",
    "babel",
    "6to5",
    "es6",
    "es2015"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "sebmck",
      "email": "sebmck@gmail.com"
    },
    {
      "name": "shuhei",
      "email": "shuhei.kagawa@gmail.com"
    }
  ],
  "name": "karma-babel-preprocessor",
  "optionalDependencies": {},
  "readme": "[![build status](https://img.shields.io/travis/babel/karma-babel-preprocessor.svg)](https://travis-ci.org/babel/karma-babel-preprocessor)\n[![npm version](https://img.shields.io/npm/v/karma-babel-preprocessor.svg)](https://www.npmjs.org/package/karma-babel-preprocessor)\n[![npm downloads](https://img.shields.io/npm/dm/karma-babel-preprocessor.svg)](https://www.npmjs.org/package/karma-babel-preprocessor)\n\n# karma-babel-preprocessor\n\n> Preprocessor to compile ES6 on the fly with [babel](https://github.com/6to5/babel).\n\n**babel and karma-babel-preprocessor only convert ES6 modules to CommonJS/AMD/SystemJS/UMD. If you choose CommonJS, you still need to resolve and concatenate CommonJS modules on your own. We recommend [karma-browserify](https://github.com/Nikku/karma-browserify) + [babelify](https://github.com/babel/babelify) or [webpack](https://github.com/webpack/karma-webpack) + [babel-loader](https://github.com/babel/babel-loader) in such cases.**\n\n## Installation\n\n```bash\nnpm install karma-babel-preprocessor --save-dev\n```\n\nAs of Babel 6.0, [you need to tell Babel which features to use](http://babeljs.io/docs/plugins/). [babel-preset-es2015](http://babeljs.io/docs/plugins/preset-es2015/) would be the most common one.\n\n```bash\nnpm install babel-preset-es2015 --save-dev\n```\n\n## Configuration\n\nSee [babel options](https://babeljs.io/docs/usage/options) for more details.\n\nGiven `options` properties are passed to babel.\n\nIn addition to the `options` property, you can configure any babel options with function properties. This is useful when you want to give different babel options from file to file.\n\nFor example, inline sourcemap configuration would look like the following.\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    preprocessors: {\n      'src/**/*.js': ['babel'],\n      'test/**/*.js': ['babel']\n    },\n    babelPreprocessor: {\n      options: {\n        presets: ['es2015'],\n        sourceMap: 'inline'\n      },\n      filename: function (file) {\n        return file.originalPath.replace(/\\.js$/, '.es5.js');\n      },\n      sourceFileName: function (file) {\n        return file.originalPath;\n      }\n    }\n  });\n};\n```\n\n### Don't preprocess third-party libraries\n\nThird-party libraries may not work properly if you apply `karma-babel-preprocessor` to them. It also introduces unnecessary overhead. Make sure to explicitly specify files that you want to preprocess.\n\nOK:\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    preprocessors: {\n      'src/**/*.js': ['babel'],\n      'test/**/*.js': ['babel']\n    },\n    // ...\n  });\n};\n```\n\nNG:\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    preprocessors: {\n      './**/*.js': ['babel']\n    },\n    // ...\n  });\n};\n```\n\nBecause it preprocesses files in `node_modules` and may break third-party libraries like jasmine #18.\n\n### Polyfill\n\nIf you need [polyfill](https://babeljs.io/docs/usage/polyfill/), make sure to include it in `files`.\n\n```bash\nnpm install babel-polyfill --save-dev\n```\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    files: [\n      'node_modules/babel-polyfill/dist/polyfill.js',\n      // ...\n    ],\n    // ...\n  });\n});\n```\n\n### Karma's plugins option\n\nIn most cases, you don't need to explicitly specify `plugins` option. By default, Karma loads all sibling NPM modules which have a name starting with karma-*. If need to do so for some reason, make sure to include `'karma-babel-preprocessor'` in it.\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    plugins: [\n     'karma-jasmine',\n     'karma-chrome-launcher',\n     'karma-babel-preprocessor'\n    ],\n    // ...\n  });\n};\n```\n\n## Custom preprocessor\n\nkarma-babel-preprocessor supports custom preprocessor. Set `base: 'babel'` in addition to normal preprocessor config.\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    preprocessors: {\n      'src/**/*.js': ['babelSourceMap'],\n      'test/**/*.js': ['babelSourceMap']\n    },\n    customPreprocessors: {\n      babelSourceMap: {\n        base: 'babel',\n        options: {\n          presets: ['es2015'],\n          sourceMap: 'inline'\n        },\n        filename: function (file) {\n          return file.originalPath.replace(/\\.js$/, '.es5.js');\n        },\n        sourceFileName: function (file) {\n          return file.originalPath;\n        }\n      },\n      // Other custom preprocessors...\n    }\n  });\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/babel/karma-babel-preprocessor.git"
  },
  "scripts": {
    "test": "karma start"
  },
  "version": "6.0.1"
}
